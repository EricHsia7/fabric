{"version":3,"file":"main-102ff935.633ced8053c118da6297.min.js","mappings":"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","sources":["webpack://fabric/./src/fabric/index.ts","webpack://fabric/./src/tools/index.ts","webpack://fabric/./src/fabric/history.ts","webpack://fabric/./src/scroll/index.ts","webpack://fabric/./src/graph/coordinate.ts","webpack://fabric/./src/graph/path.ts","webpack://fabric/./src/fabric/svg.ts","webpack://fabric/./src/tools/pen.ts","webpack://fabric/./src/index.ts"],"sourcesContent":["import { segmentsToPath, simplifyPath } from '../graph/path.ts';\nvar localforage = require('localforage');\n\nexport let canvas = document.querySelector('#fabric');\nexport let ctx = canvas.getContext('2d');\nexport let svg_canvas = document.querySelector('#vector_fabric');\nexport let svg_canvas_pen_layer = document.querySelector('#vector_fabric g#pen');\nexport var scale = Math.log(window.devicePixelRatio) / Math.log(Math.pow(2, 0.4));\nexport var width = window.innerWidth;\nexport var height = window.innerHeight;\n\nexport function resizeFabric() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  canvas.width = width * scale;\n  canvas.height = height * scale;\n  svg_canvas.setAttributeNS(null, 'width', width + 'px');\n  svg_canvas.setAttributeNS(null, 'height', height + 'px');\n  svg_canvas.setAttributeNS(null, 'viewbox', `0,0,${width},${height}`);\n  canvas.style.background = 'none';\n}\n\nexport function updatePenPath() {\n  drawPath(ctx, segmentsToPath(touchData, scale), pen_color);\n  drawPath(ctx, segmentsToPath(simplifyPath(touchData_a, tole), scale), pen_color);\n  drawPath(ctx, segmentsToPath(simplifyPath(touchData_b, tole), scale), pen_color);\n\n  currentPath.c = segmentsToPath(touchData, 1);\n  currentPath.a = segmentsToPath(simplifyPath(touchData_a, tole).concat(touchData_a[touchData_a.length - 1]), 1);\n  currentPath.b = segmentsToPath(simplifyPath(touchData_b, tole).concat(touchData_b[touchData_b.length - 1]), 1);\n}\n\nexport function registerElement(coordinates, id) {\n  var x = coordinates.map((e) => e.x);\n  var y = coordinates.map((e) => e.y);\n  registration[id] = {\n    x1: Math.min(...x),\n    y1: Math.min(...y),\n    x2: Math.max(...x),\n    y2: Math.max(...y),\n    points: coordinates,\n    id: id,\n    hidden: false\n  };\n}\n\nexport function saveContent() {\n  localforage\n    .setItem('fabric', String(document.querySelector('svg#vector_fabric g#pen').innerHTML))\n    .then(function () {})\n    .catch(function (err) {\n      // we got an error\n    });\n}\n\nexport function loadContent() {\n  localforage\n    .getItem('fabric')\n    .then(function (value) {\n      document.querySelector('svg#vector_fabric g#pen').innerHTML = value;\n      var elements = document.querySelectorAll('svg#vector_fabric g#pen g');\n      var elements_length = elements.length;\n      for (var i = 0; i < elements_length; i++) {\n        var e = elements[i];\n        var coordinates = [];\n        for (const child of e.children) {\n          coordinates = coordinates.concat(pathCommandToCoordinates(child.getAttribute('d'), 2));\n        }\n        registerElement(coordinates, e.getAttribute('id'));\n      }\n    })\n    .catch(function (err) {\n      // we got an error\n    });\n}\n","export const mode:number = 0;\n\nexport const mover: boolean = false;\nexport const move_start_x: number = 0;\nexport const move_start_y: number = 0;\nexport const move_end_x: number = 0;\nexport const move_end_y: number = 0;\nexport const move_offset_x: number = 0;\nexport const move_offset_y: number = 0;\nexport const offsetX: number = 0;\nexport const offsetY: number = 0;\n\nexport const touchData: Array = [];\nexport const touchData_a: Array = [];\nexport const touchData_b: Array = [];\nexport const start_timestamp: number = 0;\nexport const tocuh_point_identity: number = 0;\n\nexport const pen_width_base: number = 4;\nexport const force_weight: number = 0;\nexport const speed_weight: number = -0.7;\nexport const pen_color: string = '#000';\nexport const tole: number = Math.min(Math.log(pen_width_base) / Math.log(Math.pow(10, 0.88)), 0.7);\n\nexport const currentPath: object = { a: '', b: '', c: '' };\nexport const eraser_selected_element: object = {};\nexport const eraser_hidden_element: object = {};\nexport const eraser_d = 15;\nexport let eraser_color = '#888888';\n\nexport function setToolMode(m) {\n  mode = m;\n  function getSelector(m) {\n    return document.querySelector(`.tools_container button[m=\"${m}\"] span`);\n  }\n  for (var i = 0; i < 3; i++) {\n    getSelector(i).classList.remove('filled');\n  }\n  getSelector(m).classList.add('filled');\n}\n","import { saveContent } from './index.ts';\n\nexport var change_history: { addition: any[]; deletion: any[] }[] = [];\nexport var history_offset: number = 0;\nexport var registration: { [key: string]: { hidden: boolean } } = {};\n\nexport function log_changes(addition, deletion) {\n  if (!(addition.length === 0 && deletion.length === 0)) {\n    change_history.push({\n      addition: addition,\n      deletion: deletion\n    });\n    history_offset = 0;\n  }\n}\n\nexport function replayHistory(mode) {\n  if (mode === 'redo') {\n    history_offset += 1;\n  }\n  var index = change_history.length - 1 + history_offset;\n  if (index > change_history.length - 1 || index < 0) {\n    if (mode === 'redo') {\n      history_offset -= 1;\n    }\n    return '';\n  }\n  var prev = change_history[index] || { addition: [], deletion: [] };\n  var prev_addition = prev.addition;\n  var prev_deletion = prev.deletion;\n  var prev_addition_len = prev_addition.length;\n  var prev_deletion_len = prev_deletion.length;\n  var hidden_element_identifier = [];\n  var displayed_element_identifier = [];\n  for (var i = 0; i < prev_addition_len; i++) {\n    var k = prev_addition[i];\n\n    var target = document.querySelector('svg#vector_fabric g#' + k);\n    document.querySelector('svg#vector_fabric g#hidden_pen').appendChild(target);\n    target.removeAttributeNS(null, 'opacity');\n    hidden_element_identifier.push(k);\n    registration[k].hidden = true;\n  }\n  for (var i = 0; i < prev_deletion_len; i++) {\n    var k = prev_deletion[i];\n    var target = document.querySelector('svg#vector_fabric g#' + k);\n    document.querySelector('svg#vector_fabric g#pen').appendChild(target);\n\n    displayed_element_identifier.push(k);\n    registration[k].hidden = false;\n  }\n  change_history.splice(index, 1, { addition: displayed_element_identifier, deletion: hidden_element_identifier });\n  if (mode === 'undo') {\n    history_offset -= 1;\n  }\n  saveContent();\n}\n","export let keys = { 37: 1, 38: 1, 39: 1, 40: 1 };\nexport const supportsPassive = false;\nexport const wheelOpt = supportsPassive ? { passive: false } : false;\nexport const wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';\n\nexport function preventDefault(e) {\n  e.preventDefault();\n}\n\nexport function preventDefaultForScrollKeys(e) {\n  if (keys[e.keyCode]) {\n    preventDefault(e);\n    return false;\n  }\n}\n\nexport function checkPassive() {\n  try {\n    window.addEventListener(\n      'test',\n      null,\n      Object.defineProperty({}, 'passive', {\n        get: function () {\n          supportsPassive = true;\n        }\n      })\n    );\n  } catch (e) {}\n  wheelOpt = supportsPassive ? { passive: false } : false;\n}\n\nexport function disableScroll() {\n  window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF\n  window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n  window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile\n  window.addEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n\nexport function enableScroll() {\n  window.removeEventListener('DOMMouseScroll', preventDefault, false);\n  window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  window.removeEventListener('touchmove', preventDefault, wheelOpt);\n  window.removeEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n","export function getCoordinateOnCircleBorder(centerX, centerY, radius, radian) {\n  var xe = 1;\n  var ye = 1;\n  var x = parseFloat((centerX + Math.cos(radian) * radius).toFixed(10));\n  var y = parseFloat((centerY + Math.sin(radian) * radius).toFixed(10));\n  var degree = radian * (180 / Math.PI);\n  return { x, y, radian, degree, radius };\n}\n","export function segmentsToPath(segments, scale) {\n  if (segments.length < 1) {\n    return '';\n  }\n  var pathCommand = `M${segments[0].x * scale},${segments[0].y * scale}`;\n  for (var i = 1; i < segments.length - 1; i++) {\n    var c = segments[i];\n    var n = segments[i + 1] || c;\n\n    pathCommand += `Q${c.x * scale},${c.y * scale},${(c.x * scale + n.x * scale) / 2},${(c.y * scale + n.y * scale) / 2}`;\n  }\n  return pathCommand;\n}\n\nexport function distanceToSegment(point, start, end) {\n  var dx = end.x - start.x;\n  var dy = end.y - start.y;\n  var d = dx * dx + dy * dy;\n  var t = ((point.x - start.x) * dx + (point.y - start.y) * dy) / d;\n\n  if (t < 0) {\n    dx = point.x - start.x;\n    dy = point.y - start.y;\n  } else if (t > 1) {\n    dx = point.x - end.x;\n    dy = point.y - end.y;\n  } else {\n    var closestPoint = { x: start.x + t * dx, y: start.y + t * dy };\n    dx = point.x - closestPoint.x;\n    dy = point.y - closestPoint.y;\n  }\n\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function simplifyPath(points, tolerance) {\n  if (points.length < 3) {\n    return points;\n  }\n\n  var dmax = 0;\n  var index = 0;\n\n  // Find the point with the maximum distance\n  for (var i = 1; i < points.length - 1; i++) {\n    var d = distanceToSegment(points[i], points[0], points[points.length - 1]);\n    if (d > dmax) {\n      index = i;\n      dmax = d;\n    }\n  }\n\n  // If max distance is greater than tolerance, split the curve\n  if (dmax > tolerance) {\n    var leftPoints = points.slice(0, index + 1);\n    var rightPoints = points.slice(index);\n    var simplifiedLeft = simplifyPath(leftPoints, tolerance);\n    var simplifiedRight = simplifyPath(rightPoints, tolerance);\n    return simplifiedLeft.slice(0, simplifiedLeft.length - 1).concat(simplifiedRight);\n  } else {\n    return [points[0], points[points.length - 1]];\n  }\n}\n\nexport function pathCommandToCoordinates(str, precision) {\n  var points = [];\n  const regex = /((m|M)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(l|L)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(h|H)\\s{0,1}([0-9\\.\\-]*)|(v|V)\\s{0,1}([0-9\\.\\-]*)|(c|C)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)[\\,\\s]{1,2}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)[\\,\\s]{1,2}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(s|S)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)[\\,\\s]{1,2}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(q|Q)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)[\\,\\s]{1,2}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(t|T)\\s{0,1}([0-9\\.\\-]*)(\\s|\\,)([0-9\\.\\-]*)|(Z|z))/gm;\n  while ((m = regex.exec(str)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n    // The result can be accessed through the `m`-variable.\n    m.forEach((match, groupIndex) => {\n      if (match === 'M') {\n        var x = parseFloat(m[groupIndex + 1]);\n        var y = parseFloat(m[groupIndex + 3]);\n        points.push({ x, y });\n      }\n      if (match === 'L') {\n        var x = parseFloat(m[groupIndex + 1]);\n        var y = parseFloat(m[groupIndex + 3]);\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.sqrt(Math.pow(x - pX, 2) + Math.pow(y - pY, 2));\n          for (var h = 0; h < distance / precision; h++) {\n            var a = pX + (x - pX) * (h / (distance / precision));\n            var b = pY + (y - pY) * (h / (distance / precision));\n            points.push({ x: a, y: b });\n          }\n        }\n      }\n      if (match === 'H') {\n        var x = m[groupIndex + 1];\n        var y = 0;\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.abs(x - pX);\n          for (var h = 0; h < distance / precision; h++) {\n            var a = pX + (x - pX) * (h / (distance / precision));\n            points.push({ x: a, y: pY });\n          }\n        }\n      }\n      if (match === 'V') {\n        var x = 0;\n        var y = m[groupIndex + 1];\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.abs(y - pY);\n          for (var h = 0; h < distance / precision; h++) {\n            var a = pY + (y - pY) * (h / (distance / precision));\n            points.push({ x: pX, y: a });\n          }\n        }\n      }\n      if (match === 'C') {\n        var x1 = m[groupIndex + 1];\n        var y1 = m[groupIndex + 3];\n        var x2 = m[groupIndex + 4];\n        var y2 = m[groupIndex + 6];\n        var x = m[groupIndex + 7];\n        var y = m[groupIndex + 9];\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.sqrt(Math.pow(x - pX, 2) + Math.pow(y - pY, 2));\n          for (var h = 0; h < distance / precision; h++) {\n            var t = Math.min(Math.max(h / (distance / precision), 0), 1);\n            var a = Math.pow(1 - t, 3) * pX + 3 * Math.pow(1 - t, 2) * t * x1 + 3 * (1 - t) * Math.pow(t, 2) * x2 + Math.pow(t, 3) * x;\n            var b = Math.pow(1 - t, 3) * pY + 3 * Math.pow(1 - t, 2) * t * y1 + 3 * (1 - t) * Math.pow(t, 2) * y2 + Math.pow(t, 3) * y;\n\n            points.push({ x: a, y: b });\n          }\n        }\n      }\n      if (match === 'S') {\n        var x2 = m[groupIndex + 1];\n        var y2 = m[groupIndex + 3];\n        var x = m[groupIndex + 4];\n        var y = m[groupIndex + 6];\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.sqrt(Math.pow(x - pX, 2) + Math.pow(y - pY, 2));\n          for (var h = 0; h < distance / precision; h++) {\n            var t = Math.min(Math.max(h / (distance / precision), 0), 1);\n            var a = Math.pow(1 - t, 3) * pX + 3 * Math.pow(1 - t, 2) * t * (2 * pX - x2) + 3 * (1 - t) * Math.pow(t, 2) * x2 + Math.pow(t, 3) * x;\n            var b = Math.pow(1 - t, 3) * pY + 3 * Math.pow(1 - t, 2) * t * (2 * pY - y2) + 3 * (1 - t) * Math.pow(t, 2) * y2 + Math.pow(t, 3) * y;\n            points.push({ x: a, y: b });\n          }\n        }\n      }\n      if (match === 'Q') {\n        var x1 = parseFloat(m[groupIndex + 1]);\n        var y1 = parseFloat(m[groupIndex + 3]);\n        var x = parseFloat(m[groupIndex + 4]);\n        var y = parseFloat(m[groupIndex + 6]);\n        var p = points[points.length - 1] || { x: null, y: null };\n        var pX = p.x;\n        var pY = p.y;\n        if (pX === null || pY === null) {\n          points.push({ x, y });\n        } else {\n          var distance = Math.sqrt(Math.pow(x - pX, 2) + Math.pow(y - pY, 2));\n          for (var h = 0; h < distance / precision; h++) {\n            var t = Math.min(Math.max(h / (distance / precision), 0), 1);\n            var a = Math.pow(1 - t, 2) * pX + 2 * (1 - t) * t * x1 + Math.pow(t, 2) * x;\n            var b = Math.pow(1 - t, 2) * pY + 2 * (1 - t) * t * y1 + Math.pow(t, 2) * y;\n            points.push({ x: a, y: b });\n          }\n        }\n      }\n      if (match === 'T') {\n        var x = m[groupIndex + 1];\n        var y = m[groupIndex + 3];\n      }\n      if (!(match === undefined)) {\n        // console.log(`Found match, group ${groupIndex}: ${match}`);\n      }\n    });\n  }\n  return points;\n}\n","const { v4: uuidv4 } = require('uuid');\n\nexport function newGroupOnSVG() {\n  var p = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  var id = 'g-' + uuidv4();\n  p.setAttributeNS(null, 'id', id);\n  //p.setAttributeNS(null, 'opacity', '0.5');\n  svg_canvas_pen_layer.appendChild(p);\n  return id;\n}\n\nexport function drawPathOnSVG(pathData, color, container) {\n  var p = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  p.setAttributeNS(null, 'd', pathData);\n  p.setAttributeNS(null, 'stroke-width', pen_width_base);\n  p.setAttributeNS(null, 'stroke', color);\n  p.setAttributeNS(null, 'fill', 'none');\n  p.setAttributeNS(null, 'stroke-linecap', 'round');\n  p.setAttributeNS(null, 'fill-rule', 'nonzero');\n  p.setAttributeNS(null, 'id', uuidv4());\n  container = document.querySelector('#' + container) || svg_canvas_pen_layer;\n  container.appendChild(p);\n}\n","import { disableScroll, enableScroll } from '../scroll/index.ts';\nimport { getCoordinateOnCircleBorder } from '../graph/coordinate.ts';\nimport { pathCommandToCoordinates } from '../graph/path.ts';\nimport { newGroupOnSVG ,drawPathOnSVG} from '../fabric/svg.ts';\nimport { log_changes} from '../fabric/history.ts';\nimport { registerElement} from '../fabric/index.ts';\nimport { updatePenPath} from '../fabric/canvas.ts';\n\nexport function handleTouchStart_pen(event) {\n  disableScroll();\n\n  const touch = event.touches[0];\n  touchData = []; // Clear previous touch data\n  touchData_a = [];\n  touchData_b = [];\n  touch_point_identity = touch.identifier;\n\n  if (touch.force) {\n    force_weight = 0.5;\n    speed_weight = -0.2;\n  } else {\n    force_weight = 0.1;\n    speed_weight = 0.2;\n  }\n  //ctx.clearRect(0, 0, window.innerWidth * scale, window.innerHeight * scale);\n\n  touchData.push({\n    x: touch.clientX - offsetX,\n    y: touch.clientY - offsetY,\n    force: touch.force || 0, // Get force (if available, otherwise default to 0)\n    time_stamp: new Date().getTime(),\n    angle: 0\n    // Get timestamp\n  });\n\n  touchData_a.push({\n    x: touch.clientX - offsetX,\n    y: touch.clientY - offsetY\n  });\n  touchData_b.push({\n    x: touch.clientX - offsetX,\n    y: touch.clientY - offsetY\n  });\n  var current = touchData[touchData.length - 1];\n  ctx.beginPath();\n\n  // Draw a circle\n  ctx.arc(current.x * scale, current.y * scale, pen_width_base * 0.5 * scale, 0, 2 * Math.PI);\n  ctx.fillStyle = pen_color;\n  // Fill the circle with color\n  ctx.fill();\n  // Finish drawing\n  ctx.closePath();\n}\n\n//export function to handle touch move event\nexport function handleTouchMove_pen(event) {\n  var touches = [];\n  for (var t in event.touches) {\n    if (event.touches.hasOwnProperty(t) && typeof event.touches[t] === 'object') {\n      touches.push(event.touches[t]);\n    }\n  }\n\n  const touch = touches.filter((p) => p.identifier === touch_point_identity)[0];\n  if (touch) {\n    var current = touchData[touchData.length - 1] || {\n      x: touch.clientX - offsetX,\n      y: touch.clientY - offsetY,\n      force: touch.force || 0, // Get force (if available, otherwise default to 0)\n      time_stamp: new Date().getTime(),\n      angle: 0\n    };\n    var prev = touchData[touchData.length - 2] || current;\n    var x1 = prev.x;\n    var y1 = prev.y;\n    var x2 = current.x;\n    var y2 = current.y;\n    var angleRadians;\n    if (x2 - x1 === 0) {\n      // Handle vertical line (x-coordinates are the same)\n      if (y2 > y1) {\n        angleRadians = Math.PI / 2; // 90 degrees or π/2 radians\n      } else if (y2 < y1) {\n        angleRadians = -Math.PI / 2;\n        //angleRadians = Math.PI*(3/2);\n        // -90 degrees or -π/2 radians\n      } else {\n        angleRadians = 0; // Points are the same (angle is 0 radians)\n      }\n    } else {\n      // Non-vertical line\n      angleRadians = Math.atan2(y2 - y1, x2 - x1);\n    }\n\n    touchData.push({\n      x: touch.clientX - offsetX,\n      y: touch.clientY - offsetY,\n      force: touch.force || 0, // Get force (if available, otherwise default to 0)\n      time_stamp: new Date().getTime(),\n      angle: angleRadians\n    });\n\n    var speed = Math.sqrt(Math.pow(current.x - prev.x, 2) + Math.pow(current.y - prev.y, 2)) / (current.time_stamp - prev.time_stamp);\n    var radius = Math.min(Math.max(pen_width_base * Math.pow(current.force, 0.4) * (force_weight / (force_weight + speed_weight)) * 0.5 + pen_width_base * Math.max(0.3, Math.log(speed) / Math.log(1.8)) * (speed_weight / (force_weight + speed_weight)) * 0.5, 0), pen_width_base * 0.7) || 0;\n    var c1 = getCoordinateOnCircleBorder(touch.clientX - offsetX, touch.clientY - offsetY, radius, angleRadians - Math.PI / 2);\n    var c2 = getCoordinateOnCircleBorder(touch.clientX - offsetX, touch.clientY - offsetY, radius, angleRadians + Math.PI / 2);\n\n    touchData_a.push({\n      x: c1.x,\n      y: c1.y\n    });\n    touchData_b.push({\n      x: c2.x,\n      y: c2.y\n    });\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    updatePenPath();\n  }\n}\n\n//export function to handle touch end event\nexport function handleTouchEnd_pen(event) {\n  enableScroll();\n  var touches = [];\n  for (var t in event.changedTouches) {\n    if (event.changedTouches.hasOwnProperty(t) && typeof event.changedTouches[t] === 'object') {\n      touches.push(event.changedTouches[t]);\n    }\n  }\n\n  const touch = touches.filter((p) => p.identifier === touch_point_identity)[0];\n  if (touch) {\n    if (touchData.length >= 2) {\n      var prev = touchData[touchData.length - 1];\n      touchData.push({\n        x: touch.clientX - offsetX,\n        y: touch.clientY - offsetY,\n        force: touch.force || 0, // Get force (if available, otherwise default to 0)\n        time_stamp: new Date().getTime(),\n        angle: touchData[touchData.length - 1].angle\n      });\n\n      touchData_a.push({\n        x: touch.clientX - offsetX,\n        y: touch.clientY - offsetY\n      });\n      touchData_b.push({\n        x: touch.clientX - offsetX,\n        y: touch.clientY - offsetY\n      });\n\n      touchData = touchData.map((g) => Object.assign(g, { x: g.x - move_offset_x, y: g.y - move_offset_y }));\n\n      touchData_a = touchData_a.map((g) => Object.assign(g, { x: g.x - move_offset_x, y: g.y - move_offset_y }));\n\n      touchData_b = touchData_b.map((g) => Object.assign(g, { x: g.x - move_offset_x, y: g.y - move_offset_y }));\n\n      /*\n    touchData_a.push({\n      x: prev.x,\n      y: prev.y\n    });\n    touchData_b.push({\n      x: prev.x,\n      y: prev.y\n    });\n    */\n    }\n    updatePenPath();\n    var group = newGroupOnSVG();\n\n    drawPathOnSVG(currentPath.a, pen_color, group);\n    drawPathOnSVG(currentPath.b, pen_color, group);\n    drawPathOnSVG(currentPath.c, pen_color, group);\n\n    var ca = pathCommandToCoordinates(currentPath.a, 3);\n    var cb = pathCommandToCoordinates(currentPath.b, 3);\n    var cc = pathCommandToCoordinates(currentPath.c, 3);\n\n    registerElement(ca.concat(cb).concat(cc), group);\n    log_changes([group], []);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n}\n","import { change_history, history_offset, registration, log_changes, replayHistory } from './fabric/history.ts';\nimport { canvas, ctx, svg_canvas, svg_canvas_pen_layer, scale, width, height, resizeFabric, updatePenPath, registerElement, saveContent, loadContent } from './fabric/index.ts';\nimport { drawPath } from './fabric/canvas.ts';\nimport { newGroupOnSVG, drawPathOnSVG } from './fabric/svg.ts';\n\nimport { getCoordinateOnCircleBorder } from './graph/coordinate.ts';\nimport { segmentsToPath, distanceToSegment, simplifyPath, pathCommandToCoordinates } from './graph/path.ts';\n\nimport { mode, mover, move_start_x, move_start_y, move_end_x, move_end_y, move_offset_x, move_offset_y, offsetX, offsetY, touchData, touchData_a, touchData_b, start_timestamp, tocuh_point_identity, pen_width_base, force_weight, speed_weight, pen_color, tole, currentPath, eraser_selected_element, eraser_hidden_element, eraser_d, eraser_color, setToolMode } from './tools/index.ts';\nimport { handleTouchStart_eraser, handleTouchMove_eraser, handleTouchEnd_eraser } from './tools/eraser.ts';\nimport { handleTouchStart_pen, handleTouchMove_pen, handleTouchEnd_pen } from './tools/pen.ts';\nimport { handleTouchStart_mover, handleTouchMove_mover, handleTouchEnd_mover } from './tools/mover.ts';\n\nimport './fabric/index.css';\n\nconst ripple = require('@erichsia7/ripple');\nvar localforage = require('localforage');\n\nwindow.fabric_initialize = function () {\n  canvas.addEventListener(\n    'touchstart',\n    function (event) {\n      if (mode === 0) {\n        handleTouchStart_pen(event);\n      }\n      if (mode === 1) {\n        handleTouchStart_eraser(event);\n      }\n      if (mode === 2) {\n        mover = true;\n        handleTouchStart_mover(event);\n      }\n    },\n    false\n  );\n\n  canvas.addEventListener(\n    'touchmove',\n    function (event) {\n      if (mode === 0) {\n        handleTouchMove_pen(event);\n      }\n      if (mode === 1) {\n        handleTouchMove_eraser(event);\n      }\n      if (mode === 2 && mover) {\n        handleTouchMove_mover(event);\n      }\n    },\n    false\n  );\n\n  canvas.addEventListener(\n    'touchend',\n    function (event) {\n      if (mode === 0) {\n        handleTouchEnd_pen(event);\n      }\n      if (mode === 1) {\n        handleTouchEnd_eraser(event);\n      }\n      if (mode === 2 && mover) {\n        handleTouchEnd_mover(event);\n        mover = false;\n      }\n      //console.log(String(document.querySelector('svg#vector_fabric g#pen').innerHTML).length * 2/1024 + 'kb')\n      saveContent();\n    },\n    false\n  );\n\n  window.addEventListener('resize', function () {\n    resizeFabric();\n  });\n\n  ripple.addTo('.tools_container button', '#fff', 370);\n  resizeFabric();\n  loadContent();\n};\n\nexport default window.fabric_initialize;\n"],"names":["localforage","require","canvas","document","querySelector","svg_canvas","getContext","scale","Math","log","window","devicePixelRatio","pow","width","innerWidth","height","innerHeight","resizeFabric","setAttributeNS","concat","style","background","registerElement","coordinates","id","x","map","e","y","registration","x1","min","apply","_toConsumableArray","y1","x2","max","y2","points","hidden","change_history","log_changes","addition","deletion","length","push","keys","wheelOpt","wheelEvent","createElement","preventDefault","preventDefaultForScrollKeys","keyCode","disableScroll","addEventListener","enableScroll","removeEventListener","getCoordinateOnCircleBorder","centerX","centerY","radius","radian","parseFloat","cos","toFixed","sin","degree","PI","pathCommandToCoordinates","str","precision","regex","m","exec","index","lastIndex","forEach","match","groupIndex","pX","p","pY","distance","sqrt","h","a","b","abs","t","uuidv4","v4","drawPathOnSVG","pathData","color","container","createElementNS","pen_width_base","svg_canvas_pen_layer","appendChild","handleTouchEnd_pen","event","touches","changedTouches","hasOwnProperty","_typeof","touch","filter","identifier","touch_point_identity","touchData","clientX","offsetX","clientY","offsetY","force","time_stamp","Date","getTime","angle","touchData_a","touchData_b","g","Object","assign","move_offset_x","move_offset_y","updatePenPath","group","currentPath","pen_color","c","ca","cb","cc","ctx","clearRect","ripple","fabric_initialize","force_weight","speed_weight","current","beginPath","arc","fillStyle","fill","closePath","handleTouchStart_pen","angleRadians","prev","atan2","speed","c1","c2","handleTouchMove_pen","setItem","String","innerHTML","then","err","addTo","getItem","value","elements","querySelectorAll","elements_length","i","_step","_iterator","_createForOfIteratorHelper","children","s","n","done","child","getAttribute","f"],"sourceRoot":""}