{"version":3,"file":"main.c9b8df383941369c533e.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,SAAU,GAAIH,GACK,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,GAClB,CATD,CASGK,MAAM,I,4BCPF,IAAIC,EAASC,SAASC,cAAc,WAC1BF,EAAOG,WAAW,MACXF,SAASC,cAAc,kBACbD,SAASC,cAAc,wBACtCE,KAAKC,IAAIC,OAAOC,kBAAoBH,KAAKC,IAAID,KAAKI,IAAI,EAAG,KACzDF,OAAOG,WACNH,OAAOI,YCRpB,IAEMC,GAAkB,EAoBHP,KAAKQ,IAAIR,KAAKC,IAJJ,GAI0BD,KAAKC,IAAID,KAAKI,IAAI,GAAI,MAAQ,I,OCZ9FR,EAAOa,iBACL,cACA,SAAUC,GACK,IAATC,MACFC,qBAAqBF,GAEV,IAATC,MACFE,wBAAwBH,GAEb,IAATC,OACFJ,GAAS,EACTO,wBAAwBJ,GAE5B,IACA,GAEFd,EAAOa,iBACL,aACA,SAAUC,GACK,IAATC,MACFI,oBAAoBL,GAET,IAATC,MACFK,uBAAuBN,GAEZ,IAATC,MAAcJ,GAChBU,uBAAuBP,EAE3B,IACA,GAEFd,EAAOa,iBACL,YACA,SAAUC,GACK,IAATC,MACFO,mBAAmBR,GAER,IAATC,MACFQ,sBAAsBT,GAEX,IAATC,MAAcJ,IAChBa,sBAAsBV,GACtBH,GAAS,GAGXc,aACF,IACA,GAGFnB,OAAOO,iBAAiB,UAAU,WAChCa,cACF,IACAC,OAAOC,MAAM,0BAA2B,OAAQ,KAChDF,eACAG,c","sources":["webpack://fabric/webpack/universalModuleDefinition","webpack://fabric/./src/fabric/index.ts","webpack://fabric/./src/tools/index.ts","webpack://fabric/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fabric\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fabric\"] = factory();\n\telse\n\t\troot[\"fabric\"] = factory();\n})(self, () => {\nreturn ","import { segmentsToPath, simplifyPath } from '../graph/path.ts';\n\nexport let canvas = document.querySelector('#fabric');\nexport let ctx = canvas.getContext('2d');\nexport let svg_canvas = document.querySelector('#vector_fabric');\nexport let svg_canvas_pen_layer = document.querySelector('#vector_fabric g#pen');\nexport var scale = Math.log(window.devicePixelRatio) / Math.log(Math.pow(2, 0.4));\nexport var width = window.innerWidth;\nexport var height = window.innerHeight;\n\nexport function resizeFabric() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  canvas.width = width * scale;\n  canvas.height = height * scale;\n  svg_canvas.setAttributeNS(null, 'width', width + 'px');\n  svg_canvas.setAttributeNS(null, 'height', height + 'px');\n  svg_canvas.setAttributeNS(null, 'viewbox', `0,0,${width},${height}`);\n  canvas.style.background = 'none';\n}\n\nexport function updatePenPath() {\n  drawPath(ctx, segmentsToPath(touchData, scale), pen_color);\n  drawPath(ctx, segmentsToPath(simplifyPath(touchData_a, tole), scale), pen_color);\n  drawPath(ctx, segmentsToPath(simplifyPath(touchData_b, tole), scale), pen_color);\n\n  currentPath.c = segmentsToPath(touchData, 1);\n  currentPath.a = segmentsToPath(simplifyPath(touchData_a, tole).concat(touchData_a[touchData_a.length - 1]), 1);\n  currentPath.b = segmentsToPath(simplifyPath(touchData_b, tole).concat(touchData_b[touchData_b.length - 1]), 1);\n}\n\nexport function registerElement(coordinates, id) {\n  var x = coordinates.map((e) => e.x);\n  var y = coordinates.map((e) => e.y);\n  registration[id] = {\n    x1: Math.min(...x),\n    y1: Math.min(...y),\n    x2: Math.max(...x),\n    y2: Math.max(...y),\n    points: coordinates,\n    id: id,\n    hidden: false\n  };\n}\n\nexport function saveContent() {\n  localforage\n    .setItem('fabric', String(document.querySelector('svg#vector_fabric g#pen').innerHTML))\n    .then(function () {})\n    .catch(function (err) {\n      // we got an error\n    });\n}\n\nexport function loadContent() {\n  localforage\n    .getItem('fabric')\n    .then(function (value) {\n      document.querySelector('svg#vector_fabric g#pen').innerHTML = value;\n      var elements = document.querySelectorAll('svg#vector_fabric g#pen g');\n      var elements_length = elements.length;\n      for (var i = 0; i < elements_length; i++) {\n        var e = elements[i];\n        var coordinates = [];\n        for (const child of e.children) {\n          coordinates = coordinates.concat(pathCommandToCoordinates(child.getAttribute('d'), 2));\n        }\n        registerElement(coordinates, e.getAttribute('id'));\n      }\n    })\n    .catch(function (err) {\n      // we got an error\n    });\n}\n","export var mode = 0;\n\nexport const moving: boolean = false;\nexport const move_start_x: number = 0;\nexport const move_start_y: number = 0;\nexport const move_end_x: number = 0;\nexport const move_end_y: number = 0;\nexport const move_offset_x: number = 0;\nexport const move_offset_y: number = 0;\nexport const offsetX: number = 0;\nexport const offsetY: number = 0;\n\nexport const touchData: Array = [];\nexport const touchData_a: Array = [];\nexport const touchData_b: Array = [];\nexport const start_timestamp: number = 0;\nexport const tocuh_point_identity: number = 0;\n\nexport const pen_width_base: number = 4;\nexport const force_weight: number = 0;\nexport const speed_weight: number = -0.7;\nexport const pen_color: string = '#000';\nexport const tole: number = Math.min(Math.log(pen_width_base) / Math.log(Math.pow(10, 0.88)), 0.7);\n\nexport const currentPath: object = { a: '', b: '', c: '' };\nexport const eraser_selected_element: object = {};\nexport const eraser_hidden_element: object = {};\nexport const eraser_d = 15;\nexport let eraser_color = '#888888';\n\nexport function setToolMode(m) {\n  mode = m;\n  function getSelector(m) {\n    return document.querySelector(`.tools_container button[m=\"${m}\"] span`);\n  }\n  for (var i = 0; i < 3; i++) {\n    getSelector(i).classList.remove('filled');\n  }\n  getSelector(m).classList.add('filled');\n}\n","import { change_history, history_offset, registration, log_changes, replayHistory } from './fabric/history.ts';\nimport { canvas, ctx, svg_canvas, svg_canvas_pen_layer, scale, width, height } from './fabric/index.ts';\nimport { drawPath } from './fabric/canvas.ts';\nimport { newGroupOnSVG, drawPathOnSVG } from './fabric/svg.ts';\n\nimport { getCoordinateOnCircleBorder } from './graph/coordinate.ts';\nimport { segmentsToPath, distanceToSegment, simplifyPath, pathCommandToCoordinates } from './graph/path.ts';\n\nimport { moving, move_start_x, move_start_y, move_end_x, move_end_y, move_offset_x, move_offset_y, offsetX, offsetY, touchData, touchData_a, touchData_b, start_timestamp, tocuh_point_identity, pen_width_base, force_weight, speed_weight, pen_color, tole, currentPath, eraser_selected_element, eraser_hidden_element, eraser_d } from './tools/index.ts';\n\ncanvas.addEventListener(\n  'touchstart',\n  function (event) {\n    if (mode === 0) {\n      handleTouchStart_pen(event);\n    }\n    if (mode === 1) {\n      handleTouchStart_eraser(event);\n    }\n    if (mode === 2) {\n      moving = true;\n      handleTouchStart_moving(event);\n    }\n  },\n  false\n);\ncanvas.addEventListener(\n  'touchmove',\n  function (event) {\n    if (mode === 0) {\n      handleTouchMove_pen(event);\n    }\n    if (mode === 1) {\n      handleTouchMove_eraser(event);\n    }\n    if (mode === 2 && moving) {\n      handleTouchMove_moving(event);\n    }\n  },\n  false\n);\ncanvas.addEventListener(\n  'touchend',\n  function (event) {\n    if (mode === 0) {\n      handleTouchEnd_pen(event);\n    }\n    if (mode === 1) {\n      handleTouchEnd_eraser(event);\n    }\n    if (mode === 2 && moving) {\n      handleTouchEnd_moving(event);\n      moving = false;\n    }\n    //console.log(String(document.querySelector('svg#vector_fabric g#pen').innerHTML).length * 2/1024 + 'kb')\n    saveContent();\n  },\n  false\n);\n\nwindow.addEventListener('resize', function () {\n  resizeFabric();\n});\nripple.addTo('.tools_container button', '#fff', 370);\nresizeFabric();\nloadContent();\n"],"names":["root","factory","exports","module","define","amd","self","canvas","document","querySelector","getContext","Math","log","window","devicePixelRatio","pow","innerWidth","innerHeight","moving","min","addEventListener","event","mode","handleTouchStart_pen","handleTouchStart_eraser","handleTouchStart_moving","handleTouchMove_pen","handleTouchMove_eraser","handleTouchMove_moving","handleTouchEnd_pen","handleTouchEnd_eraser","handleTouchEnd_moving","saveContent","resizeFabric","ripple","addTo","loadContent"],"sourceRoot":""}